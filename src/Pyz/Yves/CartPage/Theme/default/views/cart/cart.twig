{% extends template('page-layout-cart', 'CartPage') %}

{% define data = {
    cart: _view.cart,
    cartItems: _view.cartItems,
    isQuoteValid: _view.isQuoteValid,
    isQuoteEditable: _view.isQuoteEditable,
    attributes: _view.attributes,
    request: app.request,

    title: 'cart.cart' | trans
} %}

{% block title %}
    {% widget 'CartOperationsWidget' args [data.cart] use view('cart-operations-title', 'MultiCartWidget') only %}{% endwidget %}
{% endblock %}

{% block content %}
    {% if data.cart.idQuote is not empty %}
        <div>
        {% widget 'CreateShoppingListFromCartWidget' args [data.cart.idQuote] only %}{% endwidget %}
        </div>
    {% endif %}

    {% if data.cart.items is empty %}
        <div class="grid grid--center spacing-top spacing-top--biggest spacing-x spacing-x--big">
            <div class="page-layout-cart__empty text-center col col--md-6">
                <h2>{{ 'cart.empty.title' | trans }}</h2>
                <p class="spacing-top spacing-top--big">{{ 'cart.empty.description' | trans }}</p>
                <a class="button button--large spacing-top spacing-top--bigger" href="{{ path('home') }}">{{ 'cart.empty.button' | trans }}</a>
            </div>
        </div>
    {% else %}
        <div class="grid spacing-x spacing-x--big">
            <div class="col col--sm-12 col--lg-8">
                <div class="page-layout-cart__col page-layout-cart__col--content">
                    <div class="cart-box grid grid--middle grid--justify">
                        <h3 class="col">{{ 'cart.title_content' | trans }}&nbsp;({{ app['cart.quantity'] }} {{ 'item' | trans }})</h3>
                    </div>
                    <div class="page-layout-cart__items-wrap">
                        {% widget 'QuoteConfiguredBundleWidget'
                            args [data.cart]
                            use view('quote-configured-bundle-alternative', 'ConfigurableBundleWidget')
                            with {
                                data: {
                                    isEditable: data.isQuoteEditable,
                                },
                        } only %}{% endwidget %}

                        {% set productBundleItemCounterWidget = findWidget('ProductBundleItemCounterWidget', [data.cart]) %}
                        {% set transformedCartItems = productBundleItemCounterWidget.items | default(data.cartItems) %}

                        {% for cartItem in transformedCartItems %}
                            {% if not cartItem.configuredBundleItem %}
                                {% include molecule('product-card-item') with {
                                    modifiers: ['cart'],
                                    data: {
                                        product: data.cart,
                                        productItem: cartItem,
                                        attributes: data.attributes[cartItem.sku] | default([]),
                                        cashback: cartItem.concreteAttributes.cashback_amount | default(null),
                                        shoppingPoints: cartItem.concreteAttributes.shopping_points | default(null),
                                        customer: data.cart.customer | default(null),
                                        showRemoveTranslation: true,
                                    },
                                } only %}
                            {% endif %}
                        {% endfor %}
                    </div>
                    {% widget 'CartDiscountPromotionProductListWidget' args [data.cart, data.request] only %}{% endwidget %}
                </div>
            </div>

            <div class="col col--sm-12 col--lg-4">
                <div class="page-layout-cart__col page-layout-cart__col--sidebar">
                    <h3>{{ 'cart.title_sidebar' | trans }}</h3>

                    {% include molecule('cart-summary', 'CartPage') with {
                        data: {
                            cart: data.cart,
                            isQuoteValid: data.isQuoteValid,
                            isQuoteEditable: data.isQuoteEditable,
                        },
                    } only %}
                </div>
            </div>
        </div>
    {% endif %}
    {% widget 'UpSellingProductsWidget' args [data.cart] only %}{% endwidget %}
{% endblock %}

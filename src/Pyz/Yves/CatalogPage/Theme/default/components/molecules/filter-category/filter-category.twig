{% extends molecule('filter-category', '@SprykerShop:CatalogPage') %}

{% define data = {
    levelMenu: 1,
    isEmptyCategoryFilterValueVisible: null,
} %}

{% block body %}
    {% set categoryPath = app.request.attributes.get('categoryNode') is not null
        ? app.request.attributes.get('categoryNode').url
        : app.request.attributes.get('categoryPath')
    %}

    <ul class="menu">
        {% for categoryNode in data.categories | reverse %}
            {% set quantity = 0 %}
            {% set hasChildren = existsCategoryChild(categoryNode, data.filter, data.isEmptyCategoryFilterValueVisible) %}

            {% for filterValue in data.filter.values %}
                {% if (filterValue.value == categoryNode.nodeId) %}
                    {% set quantity = filterValue.docCount %}
                {%  endif %}
            {% endfor %}

            {% if quantity or (not categoryNode.quantity and data.isEmptyCategoryFilterValueVisible) %}
                {% set currentUrl = data.filterPath is not empty ? url(data.filterPath, {categoryPath: (categoryPath)}) : categoryPath %}
                {% set categoryUrl = data.filterPath is not empty ? url(data.filterPath, {categoryPath: (categoryNode.url | trimLocale)}) : categoryNode.url %}
                {% set isActive = currentUrl == categoryUrl %}
                {% set isActiveOrChildIsActive = isActive or currentUrl starts with categoryUrl ~ '/' %}
                {% set disableAttribute = quantity == 0 ? 'disabled' %}
                {% set classes = [
                    config.name ~ '__item',
                    config.name ~ '__item--level-' ~ data.levelMenu,
                    isActive ? config.name ~ '__item--active' : '',
                    hasChildren ? config.name ~ '__item--children' : '',
                ] %}
                {% set linkActiveClass = isActive ? config.name ~ '__link--active' %}
                {% set triggerButtonJsName = data.parentJsName ? data.parentJsName ~ '__trigger' %}
                {% set arrowClass = hasChildren ? config.name ~ '__link__prefix--arrow' %}
                {% set arrowClassConcrete = hasChildren ? config.name ~ '__link__prefix--arrow--' ~ (isActiveOrChildIsActive ? 'down' : 'right') %}

                <li class="{{ classes | join(' ') }}">
                    <button class="{{ config.name }}__link {{ linkActiveClass }} {{ triggerButtonJsName }}" {{ disableAttribute }} type="button" data-url={{ categoryUrl }}>
                        <i class="{{ config.name }}__link__prefix {{ arrowClass }} {{ arrowClassConcrete }}"></i>
                        {{ categoryNode.name }}
                    </button>

                    {% if isActiveOrChildIsActive and hasChildren %}
                        {% include molecule('filter-category', 'CatalogPage') with {
                            data: {
                                levelMenu: data.levelMenu + 1,
                                filter: data.filter,
                                filterPath: data.filterPath,
                                categories: categoryNode.children,
                                parentJsName: data.parentJsName,
                            },
                        } only %}
                    {% endif %}
                </li>
            {% endif %}
        {% endfor %}
    </ul>
{% endblock %}

{% extends view('overview', '@SprykerShop:CustomerPage') %}

{% block customerContent %}
    <div class="box">
        {% embed molecule('title-box', 'CustomerPage') with {
            data: {
                title: 'customer.account.last_orders' | trans,
            },
            embed: {
                orders: data.orders,
            },
        } only %}
            {% if embed.orders is not empty %}
                {% block additionalContent %}
                    <a href="{{ url('customer/order') }}" class="col">
                        {{ 'customer.order.view_all' | trans }}
                    </a>
                {% endblock %}
            {% endif %}
        {% endembed %}

        {% include molecule('order-table', 'CustomerPage') with {
            data: {
                orders: data.orders,
                ordersAggregatedItemStateDisplayNames: data.ordersAggregatedItemStateDisplayNames,
            },
        } only %}
    </div>

    <div class="grid">
        <div class="col--sm-12 col--lg-6">
            <div class="box">
                {% include molecule('title-box', 'CustomerPage') with {
                    data: {
                        title: 'customer.account.shopping_points_and_cashback' | trans,
                    },
                } only %}

                {% if data.customer.customerBalance ?? false %}
                    <ul class="menu menu--customer-account">
                        {% if data.customer.customerBalance.getAvailableCashbackAmount %}
                            <li class="menu__item">{{ 'customer.account.available.cashback.amount' | trans }}: {{ data.customer.customerBalance.getAvailableCashbackAmount.toFloat() | money(true, data.customer.customerBalance.getAvailableCashbackCurrency) }}</li>
                        {% endif %}
                        {% if data.customer.customerBalance.getAvailableShoppingPointAmount %}
                            <li class="menu__item">{{ 'customer.account.available.shopping.point.amount' | trans }}: {{ data.customer.customerBalance.getAvailableShoppingPointAmount.toFloat()}}</li>
                        {% endif %}
                        {% if data.customer.customerBalance.getAvailableBenefitVoucherAmount %}
                            <li class="menu__item">{{ 'customer.account.available.benefit.voucher.amount' | trans }}: {{ data.customer.customerBalance.getAvailableBenefitVoucherAmount.toFloat() | money(true, data.customer.customerBalance.getAvailableBenefitVoucherCurrency) }}</li>
                        {% endif %}
                    </ul>
                {% endif %}
            </div>
        </div>
    </div>

    <div class="grid grid--justify">
        <div class="col--sm-12 col--lg-6">
            <div class="box">
                {% include molecule('title-box', 'CustomerPage') with {
                    data: {
                        title: 'customer.account.profile_data' | trans,
                    },
                } only %}

                <ul class="menu menu--customer-account">
                    <li class="menu__item">{{ data.customer.firstName }} {{ data.customer.lastName }}</li>
                    <li class="menu__item"><a class="menu__link"
                                              href="mailto:{{ data.customer.email }}">{{ data.customer.email }}</a></li>
                </ul>
            </div>
        </div>

        <div class="col--sm-12 col--lg-6">
            {% if data.billingAddress is not empty %}
                <div class="box">
                    {% embed molecule('title-box', 'CustomerPage') with {
                        data: {
                            title: 'customer.account.default_billing_address' | trans
                        },
                        embed: {
                            billingAddressId: data.billingAddressId
                        }
                    } only %}
                        {% block additionalContent %}
                            <a href="{{ url('customer/address/update', { id: embed.billingAddressId }) }}" class="col">
                                {{ 'general.edit.button' | trans }}
                            </a>
                        {% endblock %}
                    {% endembed %}

                    {% include molecule('display-address') with {
                        class: 'menu menu--customer-account',
                        data: {
                            address: data.billingAddress,
                            showAddressLabel: true,
                        },
                    } only %}
                </div>
            {% endif %}
        </div>

        <div class="col--sm-12 col--lg-6">
            {% if data.shippingAddress is not empty %}
                <div class="box">
                    {% embed molecule('title-box', 'CustomerPage') with {
                        data: {
                            title: 'customer.account.default_shipping_address' | trans
                        },
                        embed: {
                            shippingAddressId: data.shippingAddressId
                        }
                    } only %}
                        {% block additionalContent %}
                            <a href="{{ url('customer/address/update', { id: embed.shippingAddressId }) }}" class="col">
                                {{ 'general.edit.button' | trans }}
                            </a>
                        {% endblock %}
                    {% endembed %}

                    {% include molecule('display-address') with {
                        class: 'menu menu--customer-account',
                        data: {
                            address: data.shippingAddress,
                            showAddressLabel: true,
                        },
                    } only %}
                </div>
            {% endif %}
        </div>
    </div>
{% endblock %}

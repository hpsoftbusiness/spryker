{% extends model('component') %}

{% define config = {
    name: 'myworld-navbar',
    tag: 'nav',
} %}

{# TODO: This should come from API #}
{% define data = {
    isLogoColored: false,
    hasDropdown: false,
    inlineMenu: [
        {
            name: 'nav-logo-myworld-bw',
            nameColored: 'nav-logo-myworld-bw-colored',
            targetUrl: 'https://www.cashbackworld.com'
        },
        {
            name: 'nav-logo-benefit-lounge-bw',
            nameColored: 'nav-logo-benefit-lounge-bw-colored',
            targetUrl: 'https://www.cashbackworld.com/benefitlounge'
        },
        {
            name: 'nav-logo-travelworld-bw',
            nameColored: 'nav-logo-travelworld-bw-colored',
            targetUrl: 'https://www.travelworld.com'
        },
        {
            name: 'logo-cff-w-bar',
            nameColored: 'nav-logo-cff-colored',
            targetUrl: 'https://childandfamily.foundation'
        },
        {
            name: 'logo-gff-w-bar',
            nameColored: 'nav-logo-gff-colored',
            targetUrl: 'https://greenfinity.foundation'
        },
        {
            name: 'logo-onesense-w-bar',
            nameColored: 'logo-onesense',
            targetUrl: 'https://onesense.com'
        },
    ],
    linksVisiableAfterLogin: [
        {
            name: 'nav-logo-myworld-bw',
            nameColored: 'nav-logo-myworld-bw-colored',
            targetUrl: 'https://www.cashbackworld.com'
        },
        {
            name: 'nav-logo-benefit-lounge-bw',
            nameColored: 'nav-logo-benefit-lounge-bw-colored',
            targetUrl: 'https://www.cashbackworld.com/benefitlounge'
        },
        {
            name: 'nav-logo-travelworld-bw',
            nameColored: 'nav-logo-travelworld-bw-colored',
            targetUrl: 'https://www.travelworld.com/?referrer=myworldcom'
        },
        {
            name: 'nav-logo-lyconet-bw',
            nameColored: 'nav-logo-lyconet-bw-colored',
            targetUrl: 'https://lyconet.com'
        },
        {
            name: 'nav-logo-benefit-store-bw',
            nameColored: 'nav-logo-benefit-store-bw-colored',
            targetUrl: 'https://lyconet.com/benefitstore'
        },
        {
            name: 'logo-cff-w-bar',
            nameColored: 'nav-logo-cff-colored',
            targetUrl: 'https://childandfamily.foundation'
        },
        {
            name: 'logo-gff-w-bar',
            nameColored: 'nav-logo-gff-colored',
            targetUrl: 'https://greenfinity.foundation'
        },
        {
            name: 'logo-eliteclub-w-bar',
            nameColored: 'logo-eliteclub',
            targetUrl: 'https://eliteclub.com'
        },
        {
            name: 'logo-onesense-w-bar',
            nameColored: 'logo-onesense',
            targetUrl: 'https://onesense.com'
        },
    ],
    dropdownMenu: [
        {
            name: 'nav-logo-cbw-partner-colored',
            targetUrl: 'https://partner.cashbackworld.com'
        },
        {
            name: 'nav-logo-organic-colored',
            targetUrl: 'https://organic.plus'
        }
    ]
} %}

{% block body %}
    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
        {% for navItem in data.linksVisiableAfterLogin %}
            <div class="{{ config.name }}__item">
                <a
                    class="{{ config.name }}__link {{ navItem.name == 'nav-logo-marketplace-bw' ? config.name ~ '__link--active' }}"
                    href="{{ navItem.targetUrl }}"
                    target="_blank"
                >
                    <img
                        src="{{ publicPath('images/' ~ (data.isLogoColored ? navItem.nameColored : navItem.name) ~ '.svg') }}"
                        alt="{{ data.isLogoColored ? navItem.nameColored : navItem.name }}"
                        class="{{ config.name }}__image"
                    />
                </a>
            </div>
        {% endfor %}
        {% else %}
    {% for navItem in data.inlineMenu %}
        <div class="{{ config.name }}__item">
            <a
                class="{{ config.name }}__link {{ navItem.name == 'nav-logo-marketplace-bw' ? config.name ~ '__link--active' }}"
                href="{{ navItem.targetUrl }}"
                target="_blank"
            >
                <img
                    src="{{ publicPath('images/' ~ (data.isLogoColored ? navItem.nameColored : navItem.name) ~ '.svg') }}"
                    alt="{{ data.isLogoColored ? navItem.nameColored : navItem.name }}"
                    class="{{ config.name }}__image"
                />
            </a>
        </div>
    {% endfor %}


    {% endif %}

    {% if data.hasDropdown %}
    <div class="{{ config.name }}__dropdown">
            <button class="{{ config.name }}__dropdown-opener {{ config.jsName }}__dropdown-opener"
                    data-toggle-target-class-name="{{ config.jsName }}__dropdown-content">
                {% include atom('icon') with {
                    modifiers: ['dots'],
                    data: {
                        name: 'dots',
                    },
                } only %}
            </button>

        <div class="{{ config.name }}__dropdown-content {{ data.hasDropdown ? config.jsName ~ '__dropdown-content is-hidden' }}">
            {% for navItem in data.dropdownMenu %}
                <div class="{{ config.name }}__dropdown-item">
                    <a
                        class="{{ config.name }}__dropdown-link"
                        href="{{ navItem.targetUrl }}"
                        target="_blank"
                    >
                        <img
                            src="{{ publicPath('images/' ~ navItem.name ~ '.svg') }}"
                            alt="{{ navItem.name }}"
                            class="{{ config.name }}__image"
                        />
                    </a>
                </div>
            {% endfor %}
        </div>

        {% if data.hasDropdown %}
            {% include molecule('toggler-accordion') with {
                attributes: {
                    'trigger-class-name':  config.jsName ~ '__dropdown-opener',
                    'active-class': config.name ~ '__dropdown-opener--active',
                    'is-closed-outside': true,
                },
            } only %}
        {% endif %}
    </div>
    {% endif %}

{% endblock %}

{% extends molecule('product-item', '@SprykerShop:ShopUi') %}
{% import molecule('product-item') as macros %}

{% define data = {
    cashback: data.product.cashbackAmount | default(null),
    benefitAmount: data.product.benefitAmount | default(null),
    benefitSalesPrice: data.product.benefitSalesPrice | default(null),
    shoppingPointsAmount: data.product.shoppingPointsAmount | default(null),
    shoppingPoints: data.product.shoppingPoints | default(null),
    isAffiliate: data.product.is_affiliate ?? data.product.isAffiliate,
    affiliateData: data.product.affiliate_data ?? data.product.affiliateData,
    priceVatText: 'pdp.include.vat',
} %}

{% block extraClass %}
    {{ config.jsName }}
{% endblock %}

{% block body %}
    {# {{ data.product.cashback_amount }} #}
    {% set cashback = data.cashback %}
    {# TODO: refactor. It can be that benefitAmount is an array (when two concretes have two different values) #}
    {% set benefitAmount = data.benefitAmount[0] ?? data.benefitAmount %}
    {% set shoppingPointsAmount = data.shoppingPointsAmount %}
    {% set benefitPrice = data.product.prices.BENEFIT ?? null %}

    <div class="{{ config.name }}__container">
        <div class="{{ config.name }}__image-wrap">
            {% block imageContainer %}
                {{ parent() }}
            {% endblock %}

        </div>

        {% if data.idProductAbstract %}
            {% block productAbstractLabels %}
                {% widget 'ProductAbstractLabelWidget' args [data.idProductAbstract] with {
                    data: {
                        parentJsName: config.jsName,
                    },
                } only %}{% endwidget %}
            {% endblock %}
        {% endif %}

        {% block content %}
            <div class="{{ config.name }}__info">
                {% block name %}
                    {% if data.name and data.url %}
                        {% block link %}
                            {% widget 'ProductUrlWidget' args [
                                data.isAffiliate,
                                data.affiliateData,
                                data.product.attributes ?? [],
                                data.idProductAbstract
                            ] with {
                                data: {
                                    parentJsName: config.jsName,
                                    configName: config.name,
                                    dataName: data.name | replace({'\\': ''}) ,
                                    originUrl: data.url,
                                },
                            } only %}{% endwidget %}
                        {% endblock %}
                    {% endif %}

                    {% if data.name and not data.url %}
                        {% block title %}
                            <span class="{{ config.name }}__name {{ config.jsName }}__name">{{ data.name | replace({'\\': ''}) }}</span>
                        {% endblock %}
                    {% endif %}
                {% endblock %}

                {% block price %}
                    {% set defaultPriceJsName = config.jsName ? config.jsName ~ '__default-price' %}
                    {% set defaultPrice = data.product.prices.DEFAULT | default(null) %}
                    {% set benefitClass = benefitAmount ? '--benefit_voucher' : shoppingPointsAmount ? '--shopping_points' : '' %}
                    {% set hasBenefitPrice = (benefitAmount or shoppingPointsAmount) ?: false %}
                    {% set priceClass = hasBenefitPrice ? '__original_price' : '__price' %}

                    {% if data.isAffiliate is defined and data.isAffiliate %}
                        <span>{{ 'pdp.price.from' | trans }}</span>
                    {% endif %}

                    <div class="row">
                        <span class="{{ config.name }}{{ priceClass }}">
                            {{- defaultPrice | money(true, data.currencyIsoCode) -}}&nbsp;
                        </span>
                    </div>
                    <div class="row {{ config.name }}{{ benefitClass }}">
                        {% if benefitAmount %}
                            {{- benefitPrice | money(true, data.currencyIsoCode) -}} &nbsp;
                            + &nbsp; {{- benefitAmount | money(true, data.currencyIsoCode) -}}
                            {% include atom('icon') with {
                                class: config.name ~ '__icon',
                                data: {
                                    name: 'benefit-point',
                                },
                            } only %}

                        {% elseif shoppingPointsAmount %}
                            {{- benefitPrice | money(true, data.currencyIsoCode) -}} &nbsp;
                            - &nbsp; {{ shoppingPointsAmount }}
                            {% include atom('icon') with {
                                class: config.name ~ '__icon',
                                data: {
                                    name: 'shopping-point',
                                },
                            } only %}

                        {% endif %}

                        <span class="{{ config.name }}__inc-vat">
                            {{ 'pdp.include.vat' | trans }}
                        </span>

                    </div>
                {% endblock %}
            </div>

            {% block footer %}
                {% if data.isAffiliate | default(false) %}
                    {% widget 'ProductAffiliateOffersWidget' args [data.idProductAbstract] only %}{% endwidget %}
                {% else %}
                    <span class="{{ config.name }}__footer">
                        <span class="display-block {{ config.name }}__footer-logo" width="110" align="center" valign="middle">
                            <img src="{{ ('/assets/current/default/images/nav-logo-myworld-bw.svg') }}" alt="myWorld" title="myWorld" width="96" height="37" style="display: inline-block;">
                        </span>
                    </span>

                {% endif %}

            {% endblock %}
        {% endblock %}
    </div>
{% endblock %}

{% block image %}
    {% set extraClass = '' %}
    {% set modifiers = ['spaceless'] %}

    {% block productThumbnail %}
        {% widget 'ProductUrlWidget' args [
            data.isAffiliate,
            data.affiliateData,
            data.product.attributes ?? [],
            data.idProductAbstract
        ] with {
            data: {
                parentJsName: config.jsName,
                configName: config.name,
                dataName: data.name,
                originUrl: data.url,
                thumbnail: macros.thumbnail(data.image, data.name, extraClass, modifiers, config.jsName),
            },
        } only %}{% endwidget %}
    {% endblock %}
{% endblock %}

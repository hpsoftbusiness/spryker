{% extends template('page-layout-main') %}

{% define data = {
    product: _view.product,
    productUrl: _view.productUrl,

    cart: _view.cart,
    isBundle: _view.product.attributes.bundled_product | default(null),
    bundleItems: _view.product.bundledProducts,

    title: product.metaTitle | default(_view.product.name),
    metaDescription: _view.product.metaDescription | default,
    metaKeywords: _view.product.metaKeywords | default,
    shippingPriceFrom: _view.shippingPriceFrom | default(4.95),
} %}

{% block metaTitle %}{{ data.title }} | {{data.metaTitle}}{% endblock %}

{% block headTitle %}{{ data.title }} | {{data.metaTitle}}{% endblock %}

{% block headStyles %}
    {{ parent() }}
    <link itemprop="url" href="{{ data.productUrl }}">
{% endblock %}

{% block pageInfo %}
    <div class="grid grid--center">
        <div class="col col--sm-12 col--lg-10">
            <div class="container__inner">
                {% block breadcrumbs %}
                    {% widget 'ProductBreadcrumbsWithCategoriesWidget' args [data.product] only %}{% endwidget %}
                {% endblock %}
            </div>
        </div>
    </div>
{% endblock %}

{% block contentClass %}page-layout-main grid grid--center spacing-bottom spacing-bottom--biggest{% endblock %}

{% block content %}
    <div class="col col--sm-12 col--lg-10">
        <div class="container__inner">
            <div class="grid">
                {% include molecule('product-carousel', 'ProductDetailPage') with {
                    class: 'col page-layout-main__content-pdp',
                    data: {
                        product: data.product,
                    },
                } only %}
                <div class="col page-layout-main__sidebar-pdp">
                    {% if data.product.isAffiliate %}
                        {% include molecule('product-affiliate', 'ProductDetailPage') with {
                            data: {
                                product: data.product,
                                isBundle: data.bundleItems,
                                bundleItems: data.bundleItems
                            }
                        } only %}
                    {% else %}
                        {% include molecule('product-configurator', 'ProductDetailPage') with {
                            data: {
                                product: data.product,
                                isBundle: data.bundleItems,
                                bundleItems: data.bundleItems,
                                shippingPriceFrom: data.shippingPriceFrom
                            }
                        } only %}
                    {% endif %}
                    {% widget 'MerchantProductOfferWidget' args [data.product] with {
                        data:{
                            isConcrete:true
                        }
                    } %}
                    {% endwidget %}
                </div>
            </div>
        </div>

        {% widget 'ProductAlternativeListWidget' args [data.product] only %}{% endwidget %}
        <div class="container__inner">
            {% include molecule('product-detail', 'ProductDetailPage') with {
                data: {
                    description: data.product.description,
                    attributes: data.product.attributes,
                    sku: data.product.sku,
                    isAffiliate: data.product.isAffiliate
                },
            } only %}
        </div>
        {% if data.bundleItems %}
            {% include molecule('product-bundle', 'ProductDetailPage') with {
                data: {
                    bundleItems: data.bundleItems,
                },
            } only %}
        {% endif %}

        {% widget 'ProductReplacementForListWidget' args [data.product.sku] only %}{% endwidget %}

        <div class="container__inner">
            {% if data.product.productSetIds is not empty %}
                {% widget 'ProductSetIdsWidget' args [data.product.productSetIds] only %}{% endwidget %}
            {% endif %}
        </div>

        <div class="container__inner">
            {% widget 'SimilarProductsWidget' args [data.product] only %}{% endwidget %}
        </div>

        <div class="container__inner">
            {% embed molecule('product-cms-block', 'CmsBlockWidget') ignore missing with {
                data: {
                    idProductAbstract: data.product.idProductAbstract,
                }
            } only %}
                {% block body %}
                    {% cms_slot 'slt-7' required ['idProductAbstract'] with {
                        idProductAbstract: data.idProductAbstract,
                    } %}
                {% endblock %}
            {% endembed %}
        </div>
    </div>
{% endblock %}
